{"version":3,"file":"ValueInspector.js","sourceRoot":"","sources":["ValueInspector.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,QAAQ,CAAC;AAC3B,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,SAAS,MAAM,aAAa,CAAC;AAQpC,MAAM,cAAc,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAS,EAAE,EAAE;IAC5D,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,QAAQ,CAAW,EAAE,CAAC,CAAC;IAEjE,SAAS,cAAc,CAAC,IAAc;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAExC,IAAI,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YACvC,gBAAgB,CACd,aAAa,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,KAAK,UAAU,CAAC,CAClE,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED,OAAO,CACL,EAAC,SAAS,IACR,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,KAAK,EACZ,aAAa,EAAE,aAAa,EAC5B,cAAc,EAAE,cAAc,EAC9B,KAAK,EAAE,KAAK,GACZ,CACH,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,cAAc,CAAC","sourcesContent":["import { h } from \"preact\";\nimport { useState } from \"preact/hooks\";\nimport Inspector from \"./Inspector\";\n\ntype Props = {\n  value: any;\n  small?: boolean;\n  delimiter: string;\n};\n\nconst ValueInspector = ({ value, small, delimiter }: Props) => {\n  const [expandedPaths, setExpandedPaths] = useState<string[]>([]);\n\n  function onToggleExpand(path: string[]) {\n    const pathString = path.join(delimiter);\n\n    if (expandedPaths.includes(pathString)) {\n      setExpandedPaths(\n        expandedPaths.filter((currentPath) => currentPath !== pathString),\n      );\n    } else {\n      setExpandedPaths(expandedPaths.concat(pathString));\n    }\n  }\n\n  return (\n    <Inspector\n      delimiter={delimiter}\n      value={value}\n      expandedPaths={expandedPaths}\n      onToggleExpand={onToggleExpand}\n      small={small}\n    />\n  );\n};\n\nexport default ValueInspector;\n"]}